<project basedir="." name="Backend" default="run" xmlns:jacoco="antlib:org.jacoco.ant">
	<!-- === property definitions === -->
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="bin.dir" value="bin" />
	<property name="test.data.dir" value="${bin.dir}/testResults" />
	<property name="reports.dir" value="${bin.dir}/reports" />
	<property name="coverage.reports.dir" value="${reports.dir}/coverage" />
	<property name="doc.dir" value="doc" />
	<property name="lib.dir" value="../lib" />
	<property name="interfaces.dir" value="../common/interfaces" />
	<property name="etc.dir" value="../etc" />
	
	<!-- === class path === -->
	<path id="classpath">
		<pathelement location="${interfaces.dir}/${bin.dir}" />
		<pathelement location="${bin.dir}" />
		<pathelement location="${etc.dir}" />
		<pathelement location="${lib.dir}/log4j-1.2.17.jar" />
	</path>
	<path id="classpath-test">
		<path refid="classpath" />
		<pathelement location="${lib.dir}/hamcrest-core-1.3.jar" />
		<pathelement location="${lib.dir}/junit-4.11.jar" />
		<pathelement location="${lib.dir}/privilegedaccessor-1.2.1.jar" />
		<pathelement location="${lib.dir}/jacocoant.jar" />
	</path>
	
	<!-- === clean === -->
	<target name="clean" description="clean compiled classes from ${bin.dir} and javadoc from ${doc.dir}">
		<delete dir="${bin.dir}" />
		<delete dir="${doc.dir}" />
	</target>
	
	<!-- === interface === -->
	<target name="interface" description="compile the interface classes">
		<ant antfile="interfaces.xml" dir=".." target="build" inheritall="false" />
	</target>
	
	<!-- === compile source === -->
	<target name="build" depends="clean, interface" description="compile source code">
		<mkdir dir="${bin.dir}" />
		<javac srcdir="${src.dir}" destdir="${bin.dir}" classpathref="classpath" includeantruntime="false"/>
	</target>
	
	<!-- === create javadoc === -->
	<target name="doc" description="generate the javadoc documentation">
		<mkdir dir="${doc.dir}" />
		<javadoc
	    	access="private"
	    	author="true"
	    	classpathref="classpath"
	    	destdir="${doc.dir}"
	    	doctitle="${ant.project.name}"
	    	nodeprecated="false"
	    	nodeprecatedlist="false"
	    	noindex="false"
	    	nonavbar="false"
	    	notree="false"
	    	source="1.7"
	    	sourcepath="${src.dir}"
	    	splitindex="true"
	    	use="true"
	    	version="true"
	    	linksource="true" />
	</target>
	
	<!-- === compile JUnit test classes === -->
	<target name="build-test" depends="build" description="compile the JUnit test classes">
		<javac srcdir="${test.dir}" destdir="${bin.dir}" classpathref="classpath-test" includeantruntime="false"/>
	</target>

        <!-- Java Code Coverage -->
        <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
                <classpath>
                        <path refid="classpath-test" />
                </classpath>
        </taskdef>

	<!-- === run JUnit test classes === -->
	<target name="run-test" depends="build-test" description="run the JUnit test classes">
		<mkdir dir="${test.data.dir}" />

		<jacoco:coverage destfile="${test.data.dir}/jacoco.exec">
		<junit printsummary="true" errorProperty="test.failed" failureProperty="test.failed" fork="yes" forkmode="once">
			<classpath>
				<path refid="classpath-test" />
			</classpath>
			<formatter type="xml" />
			<batchtest todir="${test.data.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		</jacoco:coverage>
		<fail if="test.failed" message="one or more unit tests failed"/>

		<!-- Generate HTML report -->
		<junitreport todir="${test.data.dir}">
			<fileset dir="${test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${reports.dir}" />
		</junitreport>
		
		<!-- Generate Code Coverage report
			See: http://www.eclemma.org/jacoco/trunk/doc/ant.html -->
		<jacoco:report>
			<executiondata>
				<file file="${test.data.dir}/jacoco.exec" />
			</executiondata>

			<structure name="Code coverage">
				<classfiles>
					<fileset dir="${bin.dir}">
						<include name="**/*.class" />
                        <exclude name="**/TACExecutor*.class" />
                        <exclude name="**/*Test.class" />
                        <exclude name="**/*Test$*.class" />
					</fileset>
				</classfiles>
			</structure>

			<html destdir="${coverage.reports.dir}" />
		</jacoco:report>
	</target>

	<!-- === run === -->
	<target name="run" depends="run-test, doc" description="generate javadoc and run all tests">
	</target>
</project>
