<project basedir="." name="FUC Tests" default="help">
	<!-- === load the properties === -->
	<loadproperties srcFile="../build.properties" />

	<!-- === import paths === -->
	<import file="path.xml" />

	<!-- === print a help message when called === -->
	<target name="help" description="print this help message">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-p" />
			<arg value="-f" />
			<arg value="${ant.file}" />
		</java>
	</target>

    <!-- === depends on the interfaces === -->
    <target name="interfaces" description="Build the interfaces">
        <ant antfile="interfaces.xml" dir=".." target="build" inheritall="false" />
    </target>

    <!-- === depends on the lexer === -->
    <target name="lexer" description="Build the lexer">
        <ant antfile="build.xml" dir="../${lexer.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the ast === -->
    <target name="ast" description="Build the ast">
        <ant antfile="build.xml" dir="../${ast.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the symbol table === -->
    <target name="symbolTable" description="Build the symbolTable">
        <ant antfile="build.xml" dir="../${symbolTable.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the errorLog === -->
    <target name="errorLog" description="Build the error log">
        <ant antfile="build.xml" dir="../${errorLog.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the parser === -->
    <target name="parser" description="Build the parser">
        <ant antfile="build.xml" dir="../${parser.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the semantic analysis === -->
    <target name="semanticanalyzer" description="Build the semantic Analyser">
        <ant antfile="build.xml" dir="../${semanticAnalyzer.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the intermediateCodeGenerator === -->
    <target name="intermediateCodeGenerator" description="Build the intermediateCodeGenerator">
        <ant antfile="build.xml" dir="../${intermediateCodeGenerator.dir}" target="build" inheritall="false" />
    </target>

    <!-- === depends on the backend === -->
    <target name="backend" description="Build the backend">
        <ant antfile="build.xml" dir="../${backend.dir}" target="build" inheritall="false" />
    </target>

	<!-- === clean === -->
	<target name="clean" description="clean this project">
		<delete dir="${bin.dir}" />
	</target>

	<!-- === build tests === -->
	<target name="build-tests" depends="clean, interfaces, lexer, parser, ast, symbolTable, errorLog, semanticanalyzer, intermediateCodeGenerator, backend" description="build the junit tests">
		<mkdir dir="${bin.dir}" />
		<javac
			srcdir="${test.dir}"
			destdir="${bin.dir}"
			target="1.7"
			classpathref="classpath-test"
			includeantruntime="false" />
	</target>

	<!-- === run tests === -->
	<target name="run-tests" depends="build-tests" description="run the junit tests">
		<junit
			printsummary="on"
			fork="yes"
			forkmode="once"
			showoutput="false"
			haltonerror="true"
			haltonfailure="true" >
			<classpath>
				<path refid="classpath-test" />
			</classpath>
			<batchtest>
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
                    <exclude name="**/*RuntimeTest.java" />
                    <exclude name="**/*CrossTest.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

    <!-- === run runtime tests === -->
    <target name="run-tests-runtime" depends="build-tests" description="run the junit runtime tests. needs LLVM installation">
        <junit
                printsummary="on"
                fork="true"
                haltonerror="true"
                haltonfailure="true"
                >
            <classpath>
                <path refid="classpath-test" />
            </classpath>
            <batchtest>
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java" />
                    <include name="**/*RuntimeTest.java" />
                    <exclude name="**/*CrossTest.java" />
                </fileset>
            </batchtest>
            <formatter type="plain" usefile="no" />
        </junit>
    </target>


</project>
